{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction ReservationFormComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Check-In Date is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ReservationFormComponent {\n  // Constructor to use FormBuilder\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.reservationForm = new FormGroup({});\n  }\n  // Validators\n  ngOnInit() {\n    this.reservationForm = this.formBuilder.group({\n      checkInDate: ['', Validators.required],\n      checkOutDate: ['', Validators.required],\n      guestName: ['', Validators.required],\n      guestEmail: ['', [Validators.required, Validators.email]],\n      roomNumber: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.reservationForm.valid) {\n      console.log(\"valid\");\n    }\n  }\n  static {\n    this.ɵfac = function ReservationFormComponent_Factory(t) {\n      return new (t || ReservationFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ReservationFormComponent,\n      selectors: [[\"app-reservation-form\"]],\n      decls: 24,\n      vars: 3,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"date\", \"formControlName\", \"checkInDate\"], [4, \"ngIf\"], [\"type\", \"date\", \"formControlName\", \"checkOutDate\"], [\"type\", \"text\", \"formControlName\", \"guestName\"], [\"type\", \"email\", \"formControlName\", \"guestEmail\"], [\"type\", \"number\", \"formControlName\", \"roomNumber\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function ReservationFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function ReservationFormComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(1, \"div\")(2, \"label\");\n          i0.ɵɵtext(3, \"Check-In Date:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"input\", 1);\n          i0.ɵɵtemplate(5, ReservationFormComponent_div_5_Template, 2, 0, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\")(7, \"label\");\n          i0.ɵɵtext(8, \"Check-Out Date:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\")(11, \"label\");\n          i0.ɵɵtext(12, \"Guest Name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\")(15, \"label\");\n          i0.ɵɵtext(16, \"Guest Email:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"input\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"div\")(19, \"label\");\n          i0.ɵɵtext(20, \"Room Number:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(21, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"button\", 7);\n          i0.ɵɵtext(23, \"Submit\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          i0.ɵɵproperty(\"formGroup\", ctx.reservationForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.reservationForm.get(\"checkInDate\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.reservationForm.get(\"checkInDate\")) == null ? null : tmp_1_0.touched));\n          i0.ɵɵadvance(17);\n          i0.ɵɵproperty(\"disabled\", ctx.reservationForm.invalid);\n        }\n      },\n      dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ReservationFormComponent","constructor","formBuilder","reservationForm","ngOnInit","group","checkInDate","required","checkOutDate","guestName","guestEmail","email","roomNumber","onSubmit","valid","console","log","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","ReservationFormComponent_Template","rf","ctx","ɵɵlistener","ReservationFormComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","ReservationFormComponent_div_5_Template","ɵɵproperty","ɵɵadvance","tmp_1_0","get","invalid","touched"],"sources":["/home/detlam/Desktop/working/angular_working/hotel-app/src/app/reservation-form/reservation-form.component.ts","/home/detlam/Desktop/working/angular_working/hotel-app/src/app/reservation-form/reservation-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-reservation-form',\n  templateUrl: './reservation-form.component.html',\n  styleUrls: ['./reservation-form.component.css']\n})\n\nexport class ReservationFormComponent implements OnInit{\n\n  reservationForm: FormGroup = new FormGroup({});\n\n  // Constructor to use FormBuilder\n  constructor(private formBuilder: FormBuilder){}\n\n  // Validators\n  ngOnInit(): void {\n    this.reservationForm = this.formBuilder.group({\n      checkInDate: ['', Validators.required],\n      checkOutDate: ['', Validators.required],\n      guestName: ['', Validators.required],\n      guestEmail: ['', [Validators.required, Validators.email]],\n      roomNumber: ['', Validators.required],\n    })\n  }\n\n  \n  onSubmit(){\n    if (this.reservationForm.valid){\n      console.log(\"valid\")\n    }\n  }\n}\n","<!-- Declare a formGroup + ngSubmit directive binded to submit button -->\n<form [formGroup]=\"reservationForm\" (ngSubmit)=\"onSubmit()\">\n\n    <div>\n        <label>Check-In Date:</label>\n        <!-- Give this input field a \"variable\" name to capture it to apply validators on it -->\n        <input type=\"date\" formControlName=\"checkInDate\">\n        <div *ngIf=\"reservationForm.get('checkInDate')?.invalid && reservationForm.get('checkInDate')?.touched\">\n            Check-In Date is Required\n        </div>\n    </div>\n\n    <div>\n        <label>Check-Out Date:</label>\n        <input type=\"date\" formControlName=\"checkOutDate\">\n    </div>\n\n    <div>\n        <label>Guest Name:</label>\n        <input type=\"text\" formControlName=\"guestName\">\n    </div>\n\n    <div>\n        <label>Guest Email:</label>\n        <input type=\"email\" formControlName=\"guestEmail\">\n    </div>\n\n    <div>\n        <label>Room Number:</label>\n        <input type=\"number\" formControlName=\"roomNumber\">\n    </div>\n\n    <!-- Submit Button enabled/disabled dynamically when form is valid/invalid -->\n    <button type=\"submit\" [disabled]=\"reservationForm.invalid\">Submit</button>\n\n</form>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}