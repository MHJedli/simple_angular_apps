{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class ReservationFormComponent {\n  // Constructor to use FormBuilder\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.reservationForm = new FormGroup({});\n  }\n  // Validators\n  ngOnInit() {\n    this.reservationForm = this.formBuilder.group({\n      checkInDate: ['', Validators.required],\n      checkOutDate: ['', Validators.required],\n      guestName: ['', Validators.required],\n      guestEmail: ['', [Validators.required, Validators.email]],\n      roomNumber: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.reservationForm.valid) {\n      console.log(\"valid\");\n    }\n  }\n  static {\n    this.ɵfac = function ReservationFormComponent_Factory(t) {\n      return new (t || ReservationFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ReservationFormComponent,\n      selectors: [[\"app-reservation-form\"]],\n      decls: 23,\n      vars: 2,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"date\", \"formControlName\", \"checkInDate\"], [\"type\", \"date\", \"formControlName\", \"checkOutDate\"], [\"type\", \"text\", \"formControlName\", \"guestName\"], [\"type\", \"email\", \"formControlName\", \"guestEmail\"], [\"type\", \"number\", \"formControlName\", \"roomNumber\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function ReservationFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function ReservationFormComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(1, \"div\")(2, \"label\");\n          i0.ɵɵtext(3, \"Check-In Date:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"input\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\")(6, \"label\");\n          i0.ɵɵtext(7, \"Check-Out Date:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"input\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\")(10, \"label\");\n          i0.ɵɵtext(11, \"Guest Name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\")(14, \"label\");\n          i0.ɵɵtext(15, \"Guest Email:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"div\")(18, \"label\");\n          i0.ɵɵtext(19, \"Room Number:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"input\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"button\", 6);\n          i0.ɵɵtext(22, \"Submit\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.reservationForm);\n          i0.ɵɵadvance(21);\n          i0.ɵɵproperty(\"disabled\", ctx.reservationForm.invalid);\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["FormGroup","Validators","ReservationFormComponent","constructor","formBuilder","reservationForm","ngOnInit","group","checkInDate","required","checkOutDate","guestName","guestEmail","email","roomNumber","onSubmit","valid","console","log","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","ReservationFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","ReservationFormComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵadvance","invalid"],"sources":["/home/detlam/Desktop/working/angular_working/hotel-app/src/app/reservation-form/reservation-form.component.ts","/home/detlam/Desktop/working/angular_working/hotel-app/src/app/reservation-form/reservation-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-reservation-form',\n  templateUrl: './reservation-form.component.html',\n  styleUrls: ['./reservation-form.component.css']\n})\n\nexport class ReservationFormComponent implements OnInit{\n\n  reservationForm: FormGroup = new FormGroup({});\n\n  // Constructor to use FormBuilder\n  constructor(private formBuilder: FormBuilder){}\n\n  // Validators\n  ngOnInit(): void {\n    this.reservationForm = this.formBuilder.group({\n      checkInDate: ['', Validators.required],\n      checkOutDate: ['', Validators.required],\n      guestName: ['', Validators.required],\n      guestEmail: ['', [Validators.required, Validators.email]],\n      roomNumber: ['', Validators.required],\n    })\n  }\n\n  \n  onSubmit(){\n    if (this.reservationForm.valid){\n      console.log(\"valid\")\n    }\n  }\n}\n","<form [formGroup]=\"reservationForm\" (ngSubmit)=\"onSubmit()\">\n\n    <div>\n        <label>Check-In Date:</label>\n        <input type=\"date\" formControlName=\"checkInDate\">\n    </div>\n\n    <div>\n        <label>Check-Out Date:</label>\n        <input type=\"date\" formControlName=\"checkOutDate\">\n    </div>\n\n    <div>\n        <label>Guest Name:</label>\n        <input type=\"text\" formControlName=\"guestName\">\n    </div>\n\n    <div>\n        <label>Guest Email:</label>\n        <input type=\"email\" formControlName=\"guestEmail\">\n    </div>\n\n    <div>\n        <label>Room Number:</label>\n        <input type=\"number\" formControlName=\"roomNumber\">\n    </div>\n\n    <button type=\"submit\" [disabled]=\"reservationForm.invalid\">Submit</button>\n</form>"],"mappings":"AACA,SAAsBA,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;AAOnE,OAAM,MAAOC,wBAAwB;EAInC;EACAC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,eAAe,GAAc,IAAIL,SAAS,CAAC,EAAE,CAAC;EAGA;EAE9C;EACAM,QAAQA,CAAA;IACN,IAAI,CAACD,eAAe,GAAG,IAAI,CAACD,WAAW,CAACG,KAAK,CAAC;MAC5CC,WAAW,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MACtCC,YAAY,EAAE,CAAC,EAAE,EAAET,UAAU,CAACQ,QAAQ,CAAC;MACvCE,SAAS,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACQ,QAAQ,CAAC;MACpCG,UAAU,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACY,KAAK,CAAC,CAAC;MACzDC,UAAU,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACQ,QAAQ;KACrC,CAAC;EACJ;EAGAM,QAAQA,CAAA;IACN,IAAI,IAAI,CAACV,eAAe,CAACW,KAAK,EAAC;MAC7BC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;;EAExB;;;uBAvBWhB,wBAAwB,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAxBpB,wBAAwB;MAAAqB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCRrCV,EAAA,CAAAY,cAAA,cAA4D;UAAxBZ,EAAA,CAAAa,UAAA,sBAAAC,2DAAA;YAAA,OAAYH,GAAA,CAAAf,QAAA,EAAU;UAAA,EAAC;UAEvDI,EAAA,CAAAY,cAAA,UAAK;UACMZ,EAAA,CAAAe,MAAA,qBAAc;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UAC7BhB,EAAA,CAAAiB,SAAA,eAAiD;UACrDjB,EAAA,CAAAgB,YAAA,EAAM;UAENhB,EAAA,CAAAY,cAAA,UAAK;UACMZ,EAAA,CAAAe,MAAA,sBAAe;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UAC9BhB,EAAA,CAAAiB,SAAA,eAAkD;UACtDjB,EAAA,CAAAgB,YAAA,EAAM;UAENhB,EAAA,CAAAY,cAAA,UAAK;UACMZ,EAAA,CAAAe,MAAA,mBAAW;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UAC1BhB,EAAA,CAAAiB,SAAA,gBAA+C;UACnDjB,EAAA,CAAAgB,YAAA,EAAM;UAENhB,EAAA,CAAAY,cAAA,WAAK;UACMZ,EAAA,CAAAe,MAAA,oBAAY;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UAC3BhB,EAAA,CAAAiB,SAAA,gBAAiD;UACrDjB,EAAA,CAAAgB,YAAA,EAAM;UAENhB,EAAA,CAAAY,cAAA,WAAK;UACMZ,EAAA,CAAAe,MAAA,oBAAY;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UAC3BhB,EAAA,CAAAiB,SAAA,gBAAkD;UACtDjB,EAAA,CAAAgB,YAAA,EAAM;UAENhB,EAAA,CAAAY,cAAA,iBAA2D;UAAAZ,EAAA,CAAAe,MAAA,cAAM;UAAAf,EAAA,CAAAgB,YAAA,EAAS;;;UA3BxEhB,EAAA,CAAAkB,UAAA,cAAAP,GAAA,CAAAzB,eAAA,CAA6B;UA2BTc,EAAA,CAAAmB,SAAA,IAAoC;UAApCnB,EAAA,CAAAkB,UAAA,aAAAP,GAAA,CAAAzB,eAAA,CAAAkC,OAAA,CAAoC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}