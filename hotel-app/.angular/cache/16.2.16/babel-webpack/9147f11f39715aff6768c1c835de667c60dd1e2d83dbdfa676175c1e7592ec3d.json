{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../reservation/reservation.service\";\nimport * as i3 from \"@angular/common\";\nfunction ReservationFormComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Check-In Date is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReservationFormComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Check-Out Date is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReservationFormComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Guest Name is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReservationFormComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Guest Email is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReservationFormComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Room Number is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ReservationFormComponent {\n  // Constructor to use FormBuilder\n  // Can be used for Dependencies Injection\n  constructor(formBuilder, reservationService) {\n    this.formBuilder = formBuilder;\n    this.reservationService = reservationService;\n    this.reservationForm = new FormGroup({});\n  }\n  // Validators\n  ngOnInit() {\n    this.reservationForm = this.formBuilder.group({\n      checkInDate: ['', Validators.required],\n      checkOutDate: ['', Validators.required],\n      guestName: ['', Validators.required],\n      guestEmail: ['', [Validators.required, Validators.email]],\n      roomNumber: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.reservationForm.valid) {\n      let reservation = this.reservationForm.value;\n      this.reservationService.addReservation(reservation);\n    }\n  }\n  static {\n    this.ɵfac = function ReservationFormComponent_Factory(t) {\n      return new (t || ReservationFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ReservationService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ReservationFormComponent,\n      selectors: [[\"app-reservation-form\"]],\n      decls: 28,\n      vars: 7,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"date\", \"formControlName\", \"checkInDate\"], [4, \"ngIf\"], [\"type\", \"date\", \"formControlName\", \"checkOutDate\"], [\"type\", \"text\", \"formControlName\", \"guestName\"], [\"type\", \"email\", \"formControlName\", \"guestEmail\"], [\"type\", \"number\", \"formControlName\", \"roomNumber\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function ReservationFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function ReservationFormComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(1, \"div\")(2, \"label\");\n          i0.ɵɵtext(3, \"Check-In Date:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"input\", 1);\n          i0.ɵɵtemplate(5, ReservationFormComponent_div_5_Template, 2, 0, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\")(7, \"label\");\n          i0.ɵɵtext(8, \"Check-Out Date:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 3);\n          i0.ɵɵtemplate(10, ReservationFormComponent_div_10_Template, 2, 0, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\")(12, \"label\");\n          i0.ɵɵtext(13, \"Guest Name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 4);\n          i0.ɵɵtemplate(15, ReservationFormComponent_div_15_Template, 2, 0, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\")(17, \"label\");\n          i0.ɵɵtext(18, \"Guest Email:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(19, \"input\", 5);\n          i0.ɵɵtemplate(20, ReservationFormComponent_div_20_Template, 2, 0, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"div\")(22, \"label\");\n          i0.ɵɵtext(23, \"Room Number:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(24, \"input\", 6);\n          i0.ɵɵtemplate(25, ReservationFormComponent_div_25_Template, 2, 0, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"button\", 7);\n          i0.ɵɵtext(27, \"Submit\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          i0.ɵɵproperty(\"formGroup\", ctx.reservationForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.reservationForm.get(\"checkInDate\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.reservationForm.get(\"checkInDate\")) == null ? null : tmp_1_0.touched));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.reservationForm.get(\"checkOutDate\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.reservationForm.get(\"checkOutDate\")) == null ? null : tmp_2_0.touched));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.reservationForm.get(\"guestName\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.reservationForm.get(\"guestName\")) == null ? null : tmp_3_0.touched));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.reservationForm.get(\"guestEmail\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.reservationForm.get(\"guestEmail\")) == null ? null : tmp_4_0.touched));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.reservationForm.get(\"roomNumber\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx.reservationForm.get(\"roomNumber\")) == null ? null : tmp_5_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.reservationForm.invalid);\n        }\n      },\n      dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ReservationFormComponent","constructor","formBuilder","reservationService","reservationForm","ngOnInit","group","checkInDate","required","checkOutDate","guestName","guestEmail","email","roomNumber","onSubmit","valid","reservation","value","addReservation","ɵɵdirectiveInject","i1","FormBuilder","i2","ReservationService","selectors","decls","vars","consts","template","ReservationFormComponent_Template","rf","ctx","ɵɵlistener","ReservationFormComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","ReservationFormComponent_div_5_Template","ReservationFormComponent_div_10_Template","ReservationFormComponent_div_15_Template","ReservationFormComponent_div_20_Template","ReservationFormComponent_div_25_Template","ɵɵproperty","ɵɵadvance","tmp_1_0","get","invalid","touched","tmp_2_0","tmp_3_0","tmp_4_0","tmp_5_0"],"sources":["/home/detlam/Desktop/working/angular_working/hotel-app/src/app/reservation-form/reservation-form.component.ts","/home/detlam/Desktop/working/angular_working/hotel-app/src/app/reservation-form/reservation-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ReservationService } from '../reservation/reservation.service';\nimport { Reservation } from '../models/reservation';\n@Component({\n  selector: 'app-reservation-form',\n  templateUrl: './reservation-form.component.html',\n  styleUrls: ['./reservation-form.component.css']\n})\n\nexport class ReservationFormComponent implements OnInit{\n\n  reservationForm: FormGroup = new FormGroup({});\n\n  // Constructor to use FormBuilder\n  // Can be used for Dependencies Injection\n  constructor(\n    private formBuilder: FormBuilder,\n    private reservationService: ReservationService\n  ){}\n\n  // Validators\n  ngOnInit(): void {\n    this.reservationForm = this.formBuilder.group({\n      checkInDate: ['', Validators.required],\n      checkOutDate: ['', Validators.required],\n      guestName: ['', Validators.required],\n      guestEmail: ['', [Validators.required, Validators.email]],\n      roomNumber: ['', Validators.required],\n    })\n  }\n\n\n  onSubmit(){\n    if (this.reservationForm.valid){\n      let reservation: Reservation = this.reservationForm.value;\n      this.reservationService.addReservation(reservation)\n    }\n  }\n}\n","<!-- Declare a formGroup + ngSubmit directive binded to submit button -->\n<form [formGroup]=\"reservationForm\" (ngSubmit)=\"onSubmit()\">\n\n    <div>\n        <label>Check-In Date:</label>\n        <!-- Give this input field a \"variable\" name to capture it to apply validators on it -->\n        <input type=\"date\" formControlName=\"checkInDate\">\n\n        <!-- If the Date field gets touched without entering a value, warning message will appear -->\n         <!-- We use *ngIf to get the values from the ts file and check -->\n        <div *ngIf=\"reservationForm.get('checkInDate')?.invalid && reservationForm.get('checkInDate')?.touched\">\n            Check-In Date is Required\n        </div>\n    </div>\n\n    <div>\n        <label>Check-Out Date:</label>\n        <input type=\"date\" formControlName=\"checkOutDate\">\n        <div *ngIf=\"reservationForm.get('checkOutDate')?.invalid && reservationForm.get('checkOutDate')?.touched\">\n            Check-Out Date is Required\n        </div>\n    </div>\n\n    <div>\n        <label>Guest Name:</label>\n        <input type=\"text\" formControlName=\"guestName\">\n        <div *ngIf=\"reservationForm.get('guestName')?.invalid && reservationForm.get('guestName')?.touched\">\n            Guest Name is Required\n        </div>\n    </div>\n\n    <div>\n        <label>Guest Email:</label>\n        <input type=\"email\" formControlName=\"guestEmail\">\n        <div *ngIf=\"reservationForm.get('guestEmail')?.invalid && reservationForm.get('guestEmail')?.touched\">\n            Guest Email is Required\n        </div>\n    </div>\n\n    <div>\n        <label>Room Number:</label>\n        <input type=\"number\" formControlName=\"roomNumber\">\n        <div *ngIf=\"reservationForm.get('roomNumber')?.invalid && reservationForm.get('roomNumber')?.touched\">\n            Room Number is Required\n        </div>\n    </div>\n\n    <!-- Submit Button enabled/disabled dynamically when form is valid/invalid -->\n    <button type=\"submit\" [disabled]=\"reservationForm.invalid\">Submit</button>\n\n</form>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}