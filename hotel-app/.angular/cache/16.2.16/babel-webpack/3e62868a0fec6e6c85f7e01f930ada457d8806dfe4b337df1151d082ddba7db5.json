{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ReservationService {\n  constructor() {\n    this.reservations = [];\n  }\n  // CRUD\n  getReservations() {\n    return this.reservations;\n  }\n  getReservation(id) {\n    return this.reservations.find(res => res.id === id);\n  }\n  addReservation(reservation) {\n    this.reservations.push(reservation);\n  }\n  deleteReservation(id) {\n    let index = this.reservations.findIndex(res => res.id === id);\n    this.reservations.splice(index, 1);\n  }\n  updateReservation(updatedReservation) {\n    let index = this.reservations.findIndex(res => res.id === updatedReservation.id);\n    this.reservations[index] = updatedReservation;\n  }\n  static {\n    this.ɵfac = function ReservationService_Factory(t) {\n      return new (t || ReservationService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ReservationService,\n      factory: ReservationService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ReservationService","constructor","reservations","getReservations","getReservation","id","find","res","addReservation","reservation","push","deleteReservation","index","findIndex","splice","updateReservation","updatedReservation","factory","ɵfac","providedIn"],"sources":["/home/detlam/Desktop/working/angular_working/hotel-app/src/app/reservation/reservation.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Reservation } from '../models/reservation';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReservationService {\n\n  private reservations: Reservation[] = [];\n\n  // CRUD\n  getReservations(): Reservation[]{\n    return this.reservations;\n  }\n\n  getReservation(id: string): Reservation | undefined {\n    return this.reservations.find(res => res.id === id);\n  }\n\n  addReservation(reservation: Reservation): void{\n    this.reservations.push(reservation);\n  }\n\n  deleteReservation(id: string): void{\n    let index = this.reservations.findIndex(res => res.id === id);\n    this.reservations.splice(index,1);\n  }\n\n  updateReservation(updatedReservation: Reservation): void{\n    let index = this.reservations.findIndex(res => res.id === updatedReservation.id);\n    this.reservations[index] = updatedReservation;\n  }\n\n}\n"],"mappings":";AAMA,OAAM,MAAOA,kBAAkB;EAH/BC,YAAA;IAKU,KAAAC,YAAY,GAAkB,EAAE;;EAExC;EACAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACD,YAAY;EAC1B;EAEAE,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACH,YAAY,CAACI,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACF,EAAE,KAAKA,EAAE,CAAC;EACrD;EAEAG,cAAcA,CAACC,WAAwB;IACrC,IAAI,CAACP,YAAY,CAACQ,IAAI,CAACD,WAAW,CAAC;EACrC;EAEAE,iBAAiBA,CAACN,EAAU;IAC1B,IAAIO,KAAK,GAAG,IAAI,CAACV,YAAY,CAACW,SAAS,CAACN,GAAG,IAAIA,GAAG,CAACF,EAAE,KAAKA,EAAE,CAAC;IAC7D,IAAI,CAACH,YAAY,CAACY,MAAM,CAACF,KAAK,EAAC,CAAC,CAAC;EACnC;EAEAG,iBAAiBA,CAACC,kBAA+B;IAC/C,IAAIJ,KAAK,GAAG,IAAI,CAACV,YAAY,CAACW,SAAS,CAACN,GAAG,IAAIA,GAAG,CAACF,EAAE,KAAKW,kBAAkB,CAACX,EAAE,CAAC;IAChF,IAAI,CAACH,YAAY,CAACU,KAAK,CAAC,GAAGI,kBAAkB;EAC/C;;;uBAzBWhB,kBAAkB;IAAA;EAAA;;;aAAlBA,kBAAkB;MAAAiB,OAAA,EAAlBjB,kBAAkB,CAAAkB,IAAA;MAAAC,UAAA,EAFjB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}